#!/bin/bash

# Exit on command errors and treat unset variables as an error
set -eu

# This is a multi-instance app, meaning it can be installed several times independently
# The id of the app as stated in the manifest is available as $YNH_APP_ID
# The instance number is available as $YNH_APP_INSTANCE_NUMBER (equals "1", "2", ...)
# The app instance name is available as $YNH_APP_INSTANCE_NAME
#    - the first time the app is installed, YNH_APP_INSTANCE_NAME = ynhexample
#    - the second time the app is installed, YNH_APP_INSTANCE_NAME = ynhexample__2
#    - ynhexample__{N} for the subsequent installations, with N=3,4, ...
# The app instance name is probably what you are interested the most, since this is
# guaranteed to be unique. This is a good unique identifier to define installation path,
# db names, ...
app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
user=$YNH_APP_ARG_ADMIN

#=================================================
# CHECK THE DEBIAN'S CODENAME
#=================================================

codename=$(lsb_release -a 2>/dev/null | grep Codename | cut -f 2)
test -z "$codename" && (ynh_die "codename empty")

# Source YunoHost helpers
source /usr/share/yunohost/helpers

# Save app settings
ynh_app_setting_set "$app" user "$user"
ynh_app_setting_set $app domain $domain
ynh_app_setting_set $app path $path_url

# Check user parameter
sudo yunohost user list --json | grep -q "\"username\": \"$user\""
if [[ ! $? -eq 0 ]]; then
    ynh_die "Wrong user"
fi

# Check domain/path availability
sudo yunohost app checkurl "${domain}${path_url}" -a "$app" \
|| ynh_die "Path not available: ${domain}${path_url}"

ynh_app_setting_set "$app" admin_user "$user"

YNH_MAIL=$(sudo yunohost user info $user | grep "mail: " | sed s/'mail: '/''/g)

# Remove trailing "/" for next commands
path=${path_url%/}

# Install dependencies
echo "Install dependencies ..."

# libresonic needs tomcat8 + jdk-8. jdk-8 is only available in backports on jessie
sudo sed -i "s@__CODENAME__@$codename@g" ../conf/backports.list
sudo cp -a ../conf/backports.list /etc/apt/sources.list.d/
sudo apt-get update
sudo apt-get -t $codename-backports -y install openjdk-8-jre-headless ca-certificates-java
# Install then main dependencies
sudo apt-get install -y tomcat8 lame flac faad vorbis-tools xsltproc

# libresonic version in upstream_version file
appversion=$(cat upstream_version)
echo "Downloading libresonic $appversion..."
mkdir -p ../libresonic
final_path="/var/lib/tomcat8/webapps/"
echo "Extracting to $final_path..."
# Get libresonic war file
sudo wget https://libresonic.org/release/libresonic-v$appversion.war -q -O ${final_path}libresonic.war

# Create needed directories and link binaries
sudo mkdir /var/libresonic
sudo mkdir /var/libresonic/transcode
sudo ln -s /usr/bin/lame /var/libresonic/transcode
sudo ln -s /usr/bin/ffmpeg /var/libresonic/transcode

sudo chown tomcat8:tomcat8 -R /var/libresonic

# Restart tomcat to deploy war
sudo service tomcat8 restart

# Set nginx reverse proxy
sed -i "s@PATHTOCHANGE@$path@g" ../conf/nginx.conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/libresonic.conf

# Configure libresonic to use relative path on tomcat
sudo sh -c "echo 'SUBSONIC_ARGS=\"--context-path='$path' --max-memory=190\"'>/etc/default/libresonic"
# Configure libresonic to use Ldap
sudo sh -c "echo 'LdapAutoShadowing=true' >> /var/libresonic/libresonic.properties"
sudo sh -c "echo 'LdapManagerDn=' >> /var/libresonic/libresonic.properties"
sudo sh -c "echo 'LdapEnabled=true' >> /var/libresonic/libresonic.properties"
sudo sh -c "echo 'LdapUrl=ldap\://localhost\:389/ou\=users,dc\=yunohost,dc\=org' >> /var/libresonic/libresonic.properties"
sudo sh -c "echo 'LdapSearchFilter=(&(objectClass\=mailAccount)(uid\={0}))' >> /var/libresonic/libresonic.properties"

data_path=/home/yunohost.app/libresonic

VERSION="1.10.2"

wget "http://localhost:8080/libresonic/rest/createUser.view?u=admin&p=admin&adminRole=Yes&username=$user&password=a&email=$YNH_MAIL&ldapAuthenticated=Yes&v=$VERSION&c=myapp" > /dev/null 2>&1

wget "http://localhost:8080/libresonic/rest/updateUser.view?u=admin&p=admin&adminRole=Yes&username=$user&v=$VERSION&c=myapp" > /dev/null 2>&1
wget "http://localhost:8080/libresonic/rest/updateUser.view?u=admin&p=admin&settingsRole=Yes&username=$user&v=$VERSION&c=myapp" > /dev/null 2>&1
wget "http://localhost:8080/libresonic/rest/updateUser.view?u=admin&p=admin&streamRole=Yes&username=$user&v=$VERSION&c=myapp" > /dev/null 2>&1
wget "http://localhost:8080/libresonic/rest/updateUser.view?u=admin&p=admin&jukebowRole=Yes&username=$user&v=$VERSION&c=myapp" > /dev/null 2>&1
wget "http://localhost:8080/libresonic/rest/updateUser.view?u=admin&p=admin&downloadRole=Yes&username=$user&v=$VERSION&c=myapp" > /dev/null 2>&1
wget "http://localhost:8080/libresonic/rest/updateUser.view?u=admin&p=admin&uploadRole=Yes&username=$user&v=$VERSION&c=myapp" > /dev/null 2>&1
wget "http://localhost:8080/libresonic/rest/updateUser.view?u=admin&p=admin&covertArtRole=Yes&username=$user&v=$VERSION&c=myapp" > /dev/null 2>&1
wget "http://localhost:8080/libresonic/rest/updateUser.view?u=admin&p=admin&commentRole=Yes&username=$user&v=$VERSION&c=myapp" > /dev/null 2>&1
wget "http://localhost:8080/libresonic/rest/updateUser.view?u=admin&p=admin&podcastArtRole=Yes&username=$user&v=$VERSION&c=myapp" > /dev/null 2>&1
wget "http://localhost:8080/libresonic/rest/updateUser.view?u=admin&p=admin&shareArtRole=Yes&username=$user&v=$VERSION&c=myapp" > /dev/null 2>&1


# Reload Nginx and regenerate SSOwat conf
sudo service nginx reload
ynh_app_setting_set "$app" skipped_uris "/rest"
sudo yunohost app ssowatconf
